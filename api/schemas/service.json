{
  "type": "object",
  "description": "Provides information about the store service",
  "title": "Service",
  "required": [
    "type",
    "api_version",
    "storage_backends"
  ],
  "properties": {
    "name": {
      "description": "The service instance name",
      "type": "string"
    },
    "description": {
      "description": "The service instance description",
      "type": "string"
    },
    "type": {
      "description": "The type identifier for the service. The value must start with 'urn:x-tams:service'",
      "type": "string"
    },
    "api_version": {
      "description": "The version of the TAMS API specification this deployment implements",
      "type": "string",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)$"
    },
    "service_version": {
      "description": "The version of software providing this service. Note: Different implementations and software houses may use different conventions for their version identification. As such, this field is intentionally permissive and intended to be informative only. Implementations should avoid using this field to determine compatibility.",
      "type": "string"
    },
    "storage_backends": {
      "type": "array",
      "description": "Information about the storage backends available for writing by this service instance. If empty, this service instance is unable to allocate storage to the user (e.g. if the instance is read only).",
      "items": {
        "allOf": [
          {
            "$ref": "storage-backend.json"
          },
          {
            "required": [
              "store_type",
              "provider",
              "store_product",
              "name"
            ]
          },
          {
            "type": "object",
            "properties": {
              "default_storage": {
                "description": "If set to `true`, this is the default storage backend. The default storage backend will be used if the client does not specify a storage backend name when requesting the allocation of storage. If `storage_backends` is not empty, exactly one storage backend should be set as the default. If this parameter is not set, assume `false`.",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "additionalProperties": false
    },
    "event_stream_mechanisms": {
      "type": "array",
      "description": "List the types of event stream that this implementation supports",
      "items": {
        "$ref": "event-stream-common.json"
      }
    }
  }
}
